{"version":3,"sources":["model/Enodo_Skills_Assessment_Data_File_4-19-2019.csv","components/Map.js","components/FilterComponent.js","components/Filters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","mapStyles","position","width","height","Map","props","initMap","map","window","google","maps","document","getElementById","center","lat","lng","zoom","properties","createMarkers","dataArray","mapObj","forEach","currProperty","icon","ESTIMATED_MARKET_VALUE","marker","Marker","name","Full_Address","parseFloat","Latitude","Longitude","infowindowContent","infowindow","InfoWindow","content","addListener","open","close","state","showingInfo","activeMarker","selectedProperty","prevProps","this","googleMapScript","createElement","src","async","defer","body","appendChild","style","id","Component","FilterComponent","options","className","data-toggle","href","field","aria-expanded","aria-controls","replace","toUpperCase","float","type","readOnly","autoComplete","placeholder","onChange","handleFilterChange","value","generateOptions","Filters","arr","val","push","key","e","target","filterExists","newFilters","currentFilters","setState","prevState","filters","Object","keys","sort","filter","textAlign","onClick","handleFilterSubmit","numFields","App","updatePropertiesData","result","data","property","prop","includes","parseInt","trim","currentProperties","hanldeFilterSubmit","filtersObj","callback","newResults","isMatch","min","Min","max","Max","selectedFilters","csvFile","require","parse","header","download","skipEmptyLines","complete","dataArr","filterObj","filtersData","createFilterKeys","populateFiltersObject","length","createFiltersData","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43f60ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Enodo_Skills_Assessment_Data_File_4-19-2019.3aadd98a.csv\";","import React, { Component } from 'react';\n\nconst mapStyles = {\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n};\n\nexport class Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showingInfo: false,\n            activeMarker: {},\n            selectedProperty: ''\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.properties !== prevProps.properties)\n        {\n          this.initMap();\n        }\n    } \n\n    // initialize map and markers\n    initMap = () => {\n        const map = new window.google.maps.Map(document.getElementById('map'), {\n            center: { lat: 41.875902, lng: -87.667764 },\n            zoom: 13\n        });\n        if (this.props.properties) {\n            this.createMarkers(this.props.properties, map)\n        }\n    }\n\n    // create markers and infowindow from props data\n    createMarkers = (dataArray, mapObj) => {\n        //create collection of markers and coordinates\n        dataArray.forEach(currProperty => {\n            let icon = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n            if(currProperty.ESTIMATED_MARKET_VALUE > 400000 && currProperty.ESTIMATED_MARKET_VALUE <= 800000) { icon = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'}\n            if(currProperty.ESTIMATED_MARKET_VALUE > 800000) { icon = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'}\n            let marker = new window.google.maps.Marker({\n                name: currProperty.Full_Address,\n                position: {lat: parseFloat(currProperty.Latitude), lng: parseFloat(currProperty.Longitude)},\n                map: mapObj,\n                icon: icon\n            })\n            let infowindowContent = `<div id='infowindow'><p>${currProperty.Full_Address}</p></div>`;\n            let infowindow = new window.google.maps.InfoWindow({\n                content: infowindowContent\n            })\n            marker.addListener('mouseover', function(){\n                infowindow.open(mapObj, marker);\n            })\n            marker.addListener('mouseout', function(){\n                infowindow.close();\n            })\n        });\n    }\n\n    componentDidMount() {\n        window.initMap = this.initMap;\n        const googleMapScript = document.createElement('script');\n        googleMapScript.src = 'https://maps.googleapis.com/maps/api/js?key=' + process.env.REACT_APP_API_KEY + '&callback=initMap';\n        googleMapScript.async = true;\n        googleMapScript.defer = true;\n        window.document.body.appendChild(googleMapScript);\n    }\n\n    render() {\n        return (\n            <div style={mapStyles} id='map'></div>\n        )\n    }\n}\n\nexport default Map;","import React from 'react';\n\nfunction FilterComponent(props) {\n    if (typeof props.options[0] === 'string') {\n        return (\n            <li className='filter-component'>\n                <h4>\n                    <button data-toggle=\"collapse\" href={'#' + props.field} aria-expanded=\"false\" aria-controls={props.field} >\n                        {props.field.replace(/_/g, ' ').toUpperCase()}\n                        <i className=\"fas fa-angle-down\" style={{float:'right'}}></i>\n                    </button>\n                </h4>\n                <div className=\"el-row collapse multi-collapse\" id={props.field}>\n                    <div className='el-select'>\n                        <select name={props.field} type=\"text\" readOnly=\"readonly\" autoComplete=\"off\" placeholder=\"Select\" className=\"browser-default custom-select\" onChange={props.handleFilterChange}>\n                            <option value=\"\">Select...</option>\n                            {props.generateOptions(props.options)}\n                        </select>\n                    </div>\n                </div>\n            </li>\n        )\n    } else {\n        return (\n            <li className=\"filter-component\">\n                <h4>\n                    <button data-toggle=\"collapse\" href={'#' + props.field} aria-expanded=\"false\" aria-controls={props.field}>\n                    {props.field.replace(/_/g, ' ').toUpperCase()}\n                    <i className=\"fas fa-angle-down\" style={{float:'right'}}></i>\n                    </button>\n                </h4>\n                <div className=\"el-row collapse multi-collapse\" id={props.field}>\n                    <div className='el-input' onChange={props.handleFilterChange}>\n                        <input name={props.field} type=\"text\" autoComplete=\"off\" placeholder=\"Min\" className=\"el-input_inner\" />\n                        <input name={props.field} type=\"text\" autoComplete=\"off\" placeholder=\"Max\" className=\"el-input_inner\" />\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default FilterComponent;","import React, { Component } from 'react';\nimport FilterComponent from './FilterComponent';\n\nclass Filters extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentFilters: {}\n        }\n    }\n\n    // generate options for select dropdowns\n    generateOptions = (arr) => {\n        let options = [];\n        arr.forEach(val => {\n            (val && options.push(\n                <option value={val} key={val} >{val}</option>\n            ))\n        })\n        return options;\n    }\n\n    // handles changes to the categorical filters (Select inputs)\n    handleFilterChange =(e) => {\n        let field = e.target.name;\n        let type = e.target.placeholder || null;\n        let value = e.target.value;\n        let filterExists = false;\n        let newFilters = { ...this.state.currentFilters };\n        // check to see if filter has already been added and if so, reassign the value\n        if (newFilters[field]) {\n            // delete filter if they've reset input\n            if (value === '') {\n                delete newFilters[field];\n                filterExists = true;\n            } else {\n                // check to see if select or min-max input and update accordingly\n                (type ? newFilters[field][type] = value : newFilters[field] = value);\n                filterExists = true;\n            }\n        }\n        // if filter hadnt already been added\n        if(!filterExists ) {\n            // check to see if select or min-max input and insert accordingly\n            (type ? newFilters[field]= {[type]: value} : newFilters[field] = value);\n        }\n        this.setState(prevState => ({\n            currentFilters: newFilters \n        }))\n    }\n\n    render() {\n        let filters = [];\n        Object.keys(this.props.filters)\n            .sort()\n            .forEach(filter => {\n            filters.push(\n                <FilterComponent field={filter} options={this.props.filters[filter]} key={filter} generateOptions={this.generateOptions} handleFilterChange={this.handleFilterChange} />\n            )\n        });\n        return (\n            <div id='filters-container'>\n                <div id='filters-header'>\n                    <h3 style={{textAlign:'center'}}>Filters</h3>\n                </div>\n                <div id=\"filters\">\n                    <ul>\n                        {filters}\n                    </ul>\n                </div>\n                <div id=\"submit-container\">\n                    <button type='button' className='el-button el-button-primary' onClick={() => this.props.handleFilterSubmit(this.state.currentFilters)}>Filter</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport Map from './components/Map.js';\nimport Filters from './components/Filters.js'\nimport './App.css';\n\n// list of numeric fields in spreadsheet\nlet numFields = ['CURRENT_LAND', 'CURRENT_BUILDING', 'CURRENT_TOTAL', 'COMM_UNITS','ESTIMATED_MARKET_VALUE', 'PRIOR_LAND', 'PRIOR_BUILDING', 'PRIOR_TOTAL', \n                'PPRIOR LAND', 'PPRIOR_BUILDING', 'PPRIOR_TOTAL', 'FULL_BATH', 'HALF_BATH', 'AC', 'FIREPLACE', 'AGE', 'BUILDING_SQ_FT', 'LAND_SQ_FT', \n                'BLDG_SF', 'UNITS_TOT', 'MULTI_SALE', 'SALE_AMOUNT', 'APPEAL_A_PROPAV', 'APPEAL_A_CURRAV'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      currentProperties:[],\n      selectedFilters:[]\n    }\n  }\n\n  componentDidMount() {\n    // parse csv file\n    let csvFile = require('./model/Enodo_Skills_Assessment_Data_File_4-19-2019.csv');\n    let Papa = require(\"papaparse/papaparse.min.js\");\n    Papa.parse(csvFile, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: this.updatePropertiesData\n    })\n  }\n\n  // cleanse parsed data and assign to state\n  updatePropertiesData = (result) => {\n    const data = result.data;\n    // convert numeric fields to int or trim categorical fields\n    data.forEach(property => {\n      for (const prop in property) {\n        if (numFields.includes(prop)) {\n          property[prop] = parseInt(property[prop]);\n        } else {\n          property[prop] = property[prop].trim();\n        }\n      };\n    });\n    this.setState({\n      data,\n      currentProperties: data\n    });\n  }\n\n  // grab each filter key and add to filters object with an empty array as placeholder for values\n  createFilterKeys(dataArr, filterObj) {\n    let keysArray = Object.keys(dataArr);\n        keysArray.forEach(key => {\n            filterObj[key] = [];\n        })\n  }\n\n  // Loop through props and assign unique values to filter key arrays\n  populateFiltersObject(dataArr, filterObj) {\n    dataArr.forEach((property) => {\n      for (let key in property) {\n        if (!filterObj[key].includes(property[key])) {\n          filterObj[key].push(property[key]);\n        }\n      }\n    })\n  }\n\n  // Build out and sort filters data\n  createFiltersData() {\n    let filtersData = {}\n    this.createFilterKeys(this.state.data[0], filtersData);\n    this.populateFiltersObject(this.state.data, filtersData);\n    for (let key in filtersData) {\n      filtersData[key].sort();\n    }\n    return (filtersData);\n  }\n\n  // run query and update list of properties when filter button is selected\n  hanldeFilterSubmit = (filtersObj, callback) => {\n    let newResults = this.state.data.filter((property) => {\n      let isMatch = true;\n      for (let filter in filtersObj) {\n        if (typeof filtersObj[filter] === 'string') {\n          if (property[filter] !== filtersObj[filter]) {\n            isMatch = false;\n            break;\n          }\n        } else {\n          let min = parseInt(filtersObj[filter].Min);\n          let max = parseInt(filtersObj[filter].Max);\n          if (property[filter] < min || property[filter] > max) {\n            isMatch = false;\n            break;\n          }\n        }\n      }\n      return isMatch\n    })\n    this.setState({\n      currentProperties: newResults\n    })\n  }\n\n  render() {\n    let red = '<$400,000 '\n    let yellow = ' $400,000 - $800,000 '\n    let green = ' >$800,000'\n    return (\n      <div className=\"app\">\n        <p className='property-count'>Number of properties: <span>{this.state.currentProperties.length}</span></p>\n        <div className=\"container-div\">\n          {this.state.data.length > 0 && <Filters properties={this.state.data} filters={this.createFiltersData()} handleFilterChange={this.handleFilterChange} handleFilterSubmit={this.hanldeFilterSubmit} />}\n          <div id=\"map-container\">\n            {this.state.data.length > 0 && <Map properties={this.state.currentProperties} />}\n          </div>\n        </div>\n        <p className='emv-legend'><strong>Estimated Market Value: </strong><span id='red'>{red}</span>|<span id='yellow'>{yellow}</span>|<span id='green'>{green}</span></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}